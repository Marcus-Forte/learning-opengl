// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/gl_server.proto
// Protobuf C++ Version: 5.29.3

#include "proto/gl_server.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace gl {

inline constexpr Point3::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_{0},
        y_{0},
        z_{0},
        r_{0},
        g_{0},
        b_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Point3::Point3(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Point3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Point3DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Point3DefaultTypeInternal() {}
  union {
    Point3 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Point3DefaultTypeInternal _Point3_default_instance_;

inline constexpr PointCloud3::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        points_{},
        entity_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        point_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PointCloud3::PointCloud3(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PointCloud3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR PointCloud3DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PointCloud3DefaultTypeInternal() {}
  union {
    PointCloud3 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PointCloud3DefaultTypeInternal _PointCloud3_default_instance_;

inline constexpr NamedPoint3::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        point_{nullptr},
        size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NamedPoint3::NamedPoint3(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NamedPoint3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR NamedPoint3DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NamedPoint3DefaultTypeInternal() {}
  union {
    NamedPoint3 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NamedPoint3DefaultTypeInternal _NamedPoint3_default_instance_;
}  // namespace gl
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_proto_2fgl_5fserver_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_proto_2fgl_5fserver_2eproto = nullptr;
const ::uint32_t
    TableStruct_proto_2fgl_5fserver_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::gl::Point3, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::gl::Point3, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::gl::Point3, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::gl::Point3, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::gl::Point3, _impl_.z_),
        PROTOBUF_FIELD_OFFSET(::gl::Point3, _impl_.r_),
        PROTOBUF_FIELD_OFFSET(::gl::Point3, _impl_.g_),
        PROTOBUF_FIELD_OFFSET(::gl::Point3, _impl_.b_),
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::gl::NamedPoint3, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::gl::NamedPoint3, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::gl::NamedPoint3, _impl_.point_),
        PROTOBUF_FIELD_OFFSET(::gl::NamedPoint3, _impl_.size_),
        PROTOBUF_FIELD_OFFSET(::gl::NamedPoint3, _impl_.name_),
        1,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::gl::PointCloud3, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::gl::PointCloud3, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::gl::PointCloud3, _impl_.points_),
        PROTOBUF_FIELD_OFFSET(::gl::PointCloud3, _impl_.entity_name_),
        PROTOBUF_FIELD_OFFSET(::gl::PointCloud3, _impl_.point_size_),
        ~0u,
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 14, -1, sizeof(::gl::Point3)},
        {20, 31, -1, sizeof(::gl::NamedPoint3)},
        {34, 45, -1, sizeof(::gl::PointCloud3)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::gl::_Point3_default_instance_._instance,
    &::gl::_NamedPoint3_default_instance_._instance,
    &::gl::_PointCloud3_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2fgl_5fserver_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\025proto/gl_server.proto\022\002gl\032\033google/prot"
    "obuf/empty.proto\"k\n\006Point3\022\t\n\001x\030\001 \001(\002\022\t\n"
    "\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\022\016\n\001r\030\004 \001(\002H\000\210\001\001\022\016\n\001g"
    "\030\005 \001(\002H\001\210\001\001\022\016\n\001b\030\006 \001(\002H\002\210\001\001B\004\n\002_rB\004\n\002_gB"
    "\004\n\002_b\"R\n\013NamedPoint3\022\031\n\005point\030\001 \001(\0132\n.gl"
    ".Point3\022\014\n\004size\030\002 \001(\002\022\021\n\004name\030\003 \001(\tH\000\210\001\001"
    "B\007\n\005_name\"{\n\013PointCloud3\022\032\n\006points\030\001 \003(\013"
    "2\n.gl.Point3\022\030\n\013entity_name\030\002 \001(\tH\000\210\001\001\022\027"
    "\n\npoint_size\030\003 \001(\002H\001\210\001\001B\016\n\014_entity_nameB"
    "\r\n\013_point_size2\264\002\n\naddToScene\022.\n\010addPoin"
    "t\022\n.gl.Point3\032\026.google.protobuf.Empty\0228\n"
    "\raddPointCloud\022\017.gl.PointCloud3\032\026.google"
    ".protobuf.Empty\022>\n\021streamPointClouds\022\017.g"
    "l.PointCloud3\032\026.google.protobuf.Empty(\001\022"
    ">\n\021streamNamedPoints\022\017.gl.NamedPoint3\032\026."
    "google.protobuf.Empty(\001\022<\n\nresetScene\022\026."
    "google.protobuf.Empty\032\026.google.protobuf."
    "Emptyb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_proto_2fgl_5fserver_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::absl::once_flag descriptor_table_proto_2fgl_5fserver_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_proto_2fgl_5fserver_2eproto = {
    false,
    false,
    693,
    descriptor_table_protodef_proto_2fgl_5fserver_2eproto,
    "proto/gl_server.proto",
    &descriptor_table_proto_2fgl_5fserver_2eproto_once,
    descriptor_table_proto_2fgl_5fserver_2eproto_deps,
    1,
    3,
    schemas,
    file_default_instances,
    TableStruct_proto_2fgl_5fserver_2eproto::offsets,
    file_level_enum_descriptors_proto_2fgl_5fserver_2eproto,
    file_level_service_descriptors_proto_2fgl_5fserver_2eproto,
};
namespace gl {
// ===================================================================

class Point3::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Point3>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Point3, _impl_._has_bits_);
};

Point3::Point3(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:gl.Point3)
}
Point3::Point3(
    ::google::protobuf::Arena* arena, const Point3& from)
    : Point3(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Point3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Point3::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, b_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::b_));
}
Point3::~Point3() {
  // @@protoc_insertion_point(destructor:gl.Point3)
  SharedDtor(*this);
}
inline void Point3::SharedDtor(MessageLite& self) {
  Point3& this_ = static_cast<Point3&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Point3::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Point3(arena);
}
constexpr auto Point3::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Point3),
                                            alignof(Point3));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Point3::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Point3_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Point3::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Point3>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Point3::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Point3>(), &Point3::ByteSizeLong,
            &Point3::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Point3, _impl_._cached_size_),
        false,
    },
    &Point3::kDescriptorMethods,
    &descriptor_table_proto_2fgl_5fserver_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Point3::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2> Point3::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Point3, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::gl::Point3>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float x = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Point3, _impl_.x_)}},
    // float y = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Point3, _impl_.y_)}},
    // float z = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Point3, _impl_.z_)}},
    // optional float r = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 0, 0, PROTOBUF_FIELD_OFFSET(Point3, _impl_.r_)}},
    // optional float g = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 1, 0, PROTOBUF_FIELD_OFFSET(Point3, _impl_.g_)}},
    // optional float b = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 2, 0, PROTOBUF_FIELD_OFFSET(Point3, _impl_.b_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // float x = 1;
    {PROTOBUF_FIELD_OFFSET(Point3, _impl_.x_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 2;
    {PROTOBUF_FIELD_OFFSET(Point3, _impl_.y_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float z = 3;
    {PROTOBUF_FIELD_OFFSET(Point3, _impl_.z_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // optional float r = 4;
    {PROTOBUF_FIELD_OFFSET(Point3, _impl_.r_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float g = 5;
    {PROTOBUF_FIELD_OFFSET(Point3, _impl_.g_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float b = 6;
    {PROTOBUF_FIELD_OFFSET(Point3, _impl_.b_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Point3::Clear() {
// @@protoc_insertion_point(message_clear_start:gl.Point3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.r_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.b_) -
        reinterpret_cast<char*>(&_impl_.r_)) + sizeof(_impl_.b_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Point3::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Point3& this_ = static_cast<const Point3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Point3::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Point3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:gl.Point3)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float x = 1;
          if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_x(), target);
          }

          // float y = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_y(), target);
          }

          // float z = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_z()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_z(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional float r = 4;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_r(), target);
          }

          // optional float g = 5;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_g(), target);
          }

          // optional float b = 6;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                6, this_._internal_b(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:gl.Point3)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Point3::ByteSizeLong(const MessageLite& base) {
          const Point3& this_ = static_cast<const Point3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Point3::ByteSizeLong() const {
          const Point3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:gl.Point3)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float x = 1;
            if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
              total_size += 5;
            }
            // float y = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
              total_size += 5;
            }
            // float z = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_z()) != 0) {
              total_size += 5;
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // optional float r = 4;
            if (cached_has_bits & 0x00000001u) {
              total_size += 5;
            }
            // optional float g = 5;
            if (cached_has_bits & 0x00000002u) {
              total_size += 5;
            }
            // optional float b = 6;
            if (cached_has_bits & 0x00000004u) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Point3::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Point3*>(&to_msg);
  auto& from = static_cast<const Point3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gl.Point3)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_x()) != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_y()) != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_z()) != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.r_ = from._impl_.r_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.g_ = from._impl_.g_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.b_ = from._impl_.b_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Point3::CopyFrom(const Point3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gl.Point3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Point3::InternalSwap(Point3* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Point3, _impl_.b_)
      + sizeof(Point3::_impl_.b_)
      - PROTOBUF_FIELD_OFFSET(Point3, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Point3::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NamedPoint3::_Internal {
 public:
  using HasBits =
      decltype(std::declval<NamedPoint3>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NamedPoint3, _impl_._has_bits_);
};

NamedPoint3::NamedPoint3(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:gl.NamedPoint3)
}
inline PROTOBUF_NDEBUG_INLINE NamedPoint3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::gl::NamedPoint3& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

NamedPoint3::NamedPoint3(
    ::google::protobuf::Arena* arena,
    const NamedPoint3& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NamedPoint3* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.point_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::gl::Point3>(
                              arena, *from._impl_.point_)
                        : nullptr;
  _impl_.size_ = from._impl_.size_;

  // @@protoc_insertion_point(copy_constructor:gl.NamedPoint3)
}
inline PROTOBUF_NDEBUG_INLINE NamedPoint3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena) {}

inline void NamedPoint3::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, point_),
           0,
           offsetof(Impl_, size_) -
               offsetof(Impl_, point_) +
               sizeof(Impl_::size_));
}
NamedPoint3::~NamedPoint3() {
  // @@protoc_insertion_point(destructor:gl.NamedPoint3)
  SharedDtor(*this);
}
inline void NamedPoint3::SharedDtor(MessageLite& self) {
  NamedPoint3& this_ = static_cast<NamedPoint3&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  delete this_._impl_.point_;
  this_._impl_.~Impl_();
}

inline void* NamedPoint3::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NamedPoint3(arena);
}
constexpr auto NamedPoint3::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NamedPoint3),
                                            alignof(NamedPoint3));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NamedPoint3::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NamedPoint3_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NamedPoint3::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NamedPoint3>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NamedPoint3::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NamedPoint3>(), &NamedPoint3::ByteSizeLong,
            &NamedPoint3::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NamedPoint3, _impl_._cached_size_),
        false,
    },
    &NamedPoint3::kDescriptorMethods,
    &descriptor_table_proto_2fgl_5fserver_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NamedPoint3::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 27, 2> NamedPoint3::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NamedPoint3, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::gl::NamedPoint3>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .gl.Point3 point = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(NamedPoint3, _impl_.point_)}},
    // float size = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(NamedPoint3, _impl_.size_)}},
    // optional string name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(NamedPoint3, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .gl.Point3 point = 1;
    {PROTOBUF_FIELD_OFFSET(NamedPoint3, _impl_.point_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float size = 2;
    {PROTOBUF_FIELD_OFFSET(NamedPoint3, _impl_.size_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // optional string name = 3;
    {PROTOBUF_FIELD_OFFSET(NamedPoint3, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::gl::Point3>()},
  }}, {{
    "\16\0\0\4\0\0\0\0"
    "gl.NamedPoint3"
    "name"
  }},
};

PROTOBUF_NOINLINE void NamedPoint3::Clear() {
// @@protoc_insertion_point(message_clear_start:gl.NamedPoint3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.point_ != nullptr);
      _impl_.point_->Clear();
    }
  }
  _impl_.size_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NamedPoint3::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NamedPoint3& this_ = static_cast<const NamedPoint3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NamedPoint3::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NamedPoint3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:gl.NamedPoint3)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .gl.Point3 point = 1;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.point_, this_._impl_.point_->GetCachedSize(), target,
                stream);
          }

          // float size = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_size()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_size(), target);
          }

          // optional string name = 3;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "gl.NamedPoint3.name");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:gl.NamedPoint3)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NamedPoint3::ByteSizeLong(const MessageLite& base) {
          const NamedPoint3& this_ = static_cast<const NamedPoint3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NamedPoint3::ByteSizeLong() const {
          const NamedPoint3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:gl.NamedPoint3)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // optional string name = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // .gl.Point3 point = 1;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.point_);
            }
          }
           {
            // float size = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_size()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NamedPoint3::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NamedPoint3*>(&to_msg);
  auto& from = static_cast<const NamedPoint3&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:gl.NamedPoint3)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.point_ != nullptr);
      if (_this->_impl_.point_ == nullptr) {
        _this->_impl_.point_ =
            ::google::protobuf::Message::CopyConstruct<::gl::Point3>(arena, *from._impl_.point_);
      } else {
        _this->_impl_.point_->MergeFrom(*from._impl_.point_);
      }
    }
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_size()) != 0) {
    _this->_impl_.size_ = from._impl_.size_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NamedPoint3::CopyFrom(const NamedPoint3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gl.NamedPoint3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NamedPoint3::InternalSwap(NamedPoint3* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NamedPoint3, _impl_.size_)
      + sizeof(NamedPoint3::_impl_.size_)
      - PROTOBUF_FIELD_OFFSET(NamedPoint3, _impl_.point_)>(
          reinterpret_cast<char*>(&_impl_.point_),
          reinterpret_cast<char*>(&other->_impl_.point_));
}

::google::protobuf::Metadata NamedPoint3::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PointCloud3::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PointCloud3>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PointCloud3, _impl_._has_bits_);
};

PointCloud3::PointCloud3(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:gl.PointCloud3)
}
inline PROTOBUF_NDEBUG_INLINE PointCloud3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::gl::PointCloud3& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        points_{visibility, arena, from.points_},
        entity_name_(arena, from.entity_name_) {}

PointCloud3::PointCloud3(
    ::google::protobuf::Arena* arena,
    const PointCloud3& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PointCloud3* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.point_size_ = from._impl_.point_size_;

  // @@protoc_insertion_point(copy_constructor:gl.PointCloud3)
}
inline PROTOBUF_NDEBUG_INLINE PointCloud3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        points_{visibility, arena},
        entity_name_(arena) {}

inline void PointCloud3::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.point_size_ = {};
}
PointCloud3::~PointCloud3() {
  // @@protoc_insertion_point(destructor:gl.PointCloud3)
  SharedDtor(*this);
}
inline void PointCloud3::SharedDtor(MessageLite& self) {
  PointCloud3& this_ = static_cast<PointCloud3&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.entity_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PointCloud3::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PointCloud3(arena);
}
constexpr auto PointCloud3::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PointCloud3, _impl_.points_) +
          decltype(PointCloud3::_impl_.points_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PointCloud3), alignof(PointCloud3), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PointCloud3::PlacementNew_,
                                 sizeof(PointCloud3),
                                 alignof(PointCloud3));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PointCloud3::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PointCloud3_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PointCloud3::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PointCloud3>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PointCloud3::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PointCloud3>(), &PointCloud3::ByteSizeLong,
            &PointCloud3::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PointCloud3, _impl_._cached_size_),
        false,
    },
    &PointCloud3::kDescriptorMethods,
    &descriptor_table_proto_2fgl_5fserver_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PointCloud3::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 34, 2> PointCloud3::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PointCloud3, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::gl::PointCloud3>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .gl.Point3 points = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PointCloud3, _impl_.points_)}},
    // optional string entity_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(PointCloud3, _impl_.entity_name_)}},
    // optional float point_size = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 1, 0, PROTOBUF_FIELD_OFFSET(PointCloud3, _impl_.point_size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .gl.Point3 points = 1;
    {PROTOBUF_FIELD_OFFSET(PointCloud3, _impl_.points_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string entity_name = 2;
    {PROTOBUF_FIELD_OFFSET(PointCloud3, _impl_.entity_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional float point_size = 3;
    {PROTOBUF_FIELD_OFFSET(PointCloud3, _impl_.point_size_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetTable<::gl::Point3>()},
  }}, {{
    "\16\0\13\0\0\0\0\0"
    "gl.PointCloud3"
    "entity_name"
  }},
};

PROTOBUF_NOINLINE void PointCloud3::Clear() {
// @@protoc_insertion_point(message_clear_start:gl.PointCloud3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.points_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.entity_name_.ClearNonDefaultToEmpty();
  }
  _impl_.point_size_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PointCloud3::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PointCloud3& this_ = static_cast<const PointCloud3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PointCloud3::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PointCloud3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:gl.PointCloud3)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .gl.Point3 points = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_points_size());
               i < n; i++) {
            const auto& repfield = this_._internal_points().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string entity_name = 2;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_entity_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "gl.PointCloud3.entity_name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // optional float point_size = 3;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_point_size(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:gl.PointCloud3)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PointCloud3::ByteSizeLong(const MessageLite& base) {
          const PointCloud3& this_ = static_cast<const PointCloud3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PointCloud3::ByteSizeLong() const {
          const PointCloud3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:gl.PointCloud3)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .gl.Point3 points = 1;
            {
              total_size += 1UL * this_._internal_points_size();
              for (const auto& msg : this_._internal_points()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // optional string entity_name = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_entity_name());
            }
            // optional float point_size = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PointCloud3::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PointCloud3*>(&to_msg);
  auto& from = static_cast<const PointCloud3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:gl.PointCloud3)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_points()->MergeFrom(
      from._internal_points());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_entity_name(from._internal_entity_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.point_size_ = from._impl_.point_size_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PointCloud3::CopyFrom(const PointCloud3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gl.PointCloud3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PointCloud3::InternalSwap(PointCloud3* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.points_.InternalSwap(&other->_impl_.points_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_name_, &other->_impl_.entity_name_, arena);
        swap(_impl_.point_size_, other->_impl_.point_size_);
}

::google::protobuf::Metadata PointCloud3::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace gl
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_proto_2fgl_5fserver_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
