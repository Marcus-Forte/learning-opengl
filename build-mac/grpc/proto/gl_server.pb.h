// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/gl_server.proto
// Protobuf C++ Version: 5.29.3

#ifndef proto_2fgl_5fserver_2eproto_2epb_2eh
#define proto_2fgl_5fserver_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/empty.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2fgl_5fserver_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fgl_5fserver_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_proto_2fgl_5fserver_2eproto;
namespace gl {
class NamedPoint3;
struct NamedPoint3DefaultTypeInternal;
extern NamedPoint3DefaultTypeInternal _NamedPoint3_default_instance_;
class Point3;
struct Point3DefaultTypeInternal;
extern Point3DefaultTypeInternal _Point3_default_instance_;
class PointCloud3;
struct PointCloud3DefaultTypeInternal;
extern PointCloud3DefaultTypeInternal _PointCloud3_default_instance_;
}  // namespace gl
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace gl {

// ===================================================================


// -------------------------------------------------------------------

class Point3 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gl.Point3) */ {
 public:
  inline Point3() : Point3(nullptr) {}
  ~Point3() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Point3* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Point3));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Point3(
      ::google::protobuf::internal::ConstantInitialized);

  inline Point3(const Point3& from) : Point3(nullptr, from) {}
  inline Point3(Point3&& from) noexcept
      : Point3(nullptr, std::move(from)) {}
  inline Point3& operator=(const Point3& from) {
    CopyFrom(from);
    return *this;
  }
  inline Point3& operator=(Point3&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Point3& default_instance() {
    return *internal_default_instance();
  }
  static inline const Point3* internal_default_instance() {
    return reinterpret_cast<const Point3*>(
        &_Point3_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Point3& a, Point3& b) { a.Swap(&b); }
  inline void Swap(Point3* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Point3* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Point3* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Point3>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Point3& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Point3& from) { Point3::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Point3* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "gl.Point3"; }

 protected:
  explicit Point3(::google::protobuf::Arena* arena);
  Point3(::google::protobuf::Arena* arena, const Point3& from);
  Point3(::google::protobuf::Arena* arena, Point3&& from) noexcept
      : Point3(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
    kRFieldNumber = 4,
    kGFieldNumber = 5,
    kBFieldNumber = 6,
  };
  // float x = 1;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float y = 2;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // float z = 3;
  void clear_z() ;
  float z() const;
  void set_z(float value);

  private:
  float _internal_z() const;
  void _internal_set_z(float value);

  public:
  // optional float r = 4;
  bool has_r() const;
  void clear_r() ;
  float r() const;
  void set_r(float value);

  private:
  float _internal_r() const;
  void _internal_set_r(float value);

  public:
  // optional float g = 5;
  bool has_g() const;
  void clear_g() ;
  float g() const;
  void set_g(float value);

  private:
  float _internal_g() const;
  void _internal_set_g(float value);

  public:
  // optional float b = 6;
  bool has_b() const;
  void clear_b() ;
  float b() const;
  void set_b(float value);

  private:
  float _internal_b() const;
  void _internal_set_b(float value);

  public:
  // @@protoc_insertion_point(class_scope:gl.Point3)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Point3& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    float x_;
    float y_;
    float z_;
    float r_;
    float g_;
    float b_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fgl_5fserver_2eproto;
};
// -------------------------------------------------------------------

class PointCloud3 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gl.PointCloud3) */ {
 public:
  inline PointCloud3() : PointCloud3(nullptr) {}
  ~PointCloud3() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PointCloud3* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PointCloud3));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PointCloud3(
      ::google::protobuf::internal::ConstantInitialized);

  inline PointCloud3(const PointCloud3& from) : PointCloud3(nullptr, from) {}
  inline PointCloud3(PointCloud3&& from) noexcept
      : PointCloud3(nullptr, std::move(from)) {}
  inline PointCloud3& operator=(const PointCloud3& from) {
    CopyFrom(from);
    return *this;
  }
  inline PointCloud3& operator=(PointCloud3&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PointCloud3& default_instance() {
    return *internal_default_instance();
  }
  static inline const PointCloud3* internal_default_instance() {
    return reinterpret_cast<const PointCloud3*>(
        &_PointCloud3_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(PointCloud3& a, PointCloud3& b) { a.Swap(&b); }
  inline void Swap(PointCloud3* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PointCloud3* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PointCloud3* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PointCloud3>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PointCloud3& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PointCloud3& from) { PointCloud3::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PointCloud3* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "gl.PointCloud3"; }

 protected:
  explicit PointCloud3(::google::protobuf::Arena* arena);
  PointCloud3(::google::protobuf::Arena* arena, const PointCloud3& from);
  PointCloud3(::google::protobuf::Arena* arena, PointCloud3&& from) noexcept
      : PointCloud3(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPointsFieldNumber = 1,
    kEntityNameFieldNumber = 2,
    kPointSizeFieldNumber = 3,
  };
  // repeated .gl.Point3 points = 1;
  int points_size() const;
  private:
  int _internal_points_size() const;

  public:
  void clear_points() ;
  ::gl::Point3* mutable_points(int index);
  ::google::protobuf::RepeatedPtrField<::gl::Point3>* mutable_points();

  private:
  const ::google::protobuf::RepeatedPtrField<::gl::Point3>& _internal_points() const;
  ::google::protobuf::RepeatedPtrField<::gl::Point3>* _internal_mutable_points();
  public:
  const ::gl::Point3& points(int index) const;
  ::gl::Point3* add_points();
  const ::google::protobuf::RepeatedPtrField<::gl::Point3>& points() const;
  // optional string entity_name = 2;
  bool has_entity_name() const;
  void clear_entity_name() ;
  const std::string& entity_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_entity_name(Arg_&& arg, Args_... args);
  std::string* mutable_entity_name();
  PROTOBUF_NODISCARD std::string* release_entity_name();
  void set_allocated_entity_name(std::string* value);

  private:
  const std::string& _internal_entity_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entity_name(
      const std::string& value);
  std::string* _internal_mutable_entity_name();

  public:
  // optional float point_size = 3;
  bool has_point_size() const;
  void clear_point_size() ;
  float point_size() const;
  void set_point_size(float value);

  private:
  float _internal_point_size() const;
  void _internal_set_point_size(float value);

  public:
  // @@protoc_insertion_point(class_scope:gl.PointCloud3)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      34, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PointCloud3& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::gl::Point3 > points_;
    ::google::protobuf::internal::ArenaStringPtr entity_name_;
    float point_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fgl_5fserver_2eproto;
};
// -------------------------------------------------------------------

class NamedPoint3 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:gl.NamedPoint3) */ {
 public:
  inline NamedPoint3() : NamedPoint3(nullptr) {}
  ~NamedPoint3() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NamedPoint3* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NamedPoint3));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NamedPoint3(
      ::google::protobuf::internal::ConstantInitialized);

  inline NamedPoint3(const NamedPoint3& from) : NamedPoint3(nullptr, from) {}
  inline NamedPoint3(NamedPoint3&& from) noexcept
      : NamedPoint3(nullptr, std::move(from)) {}
  inline NamedPoint3& operator=(const NamedPoint3& from) {
    CopyFrom(from);
    return *this;
  }
  inline NamedPoint3& operator=(NamedPoint3&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NamedPoint3& default_instance() {
    return *internal_default_instance();
  }
  static inline const NamedPoint3* internal_default_instance() {
    return reinterpret_cast<const NamedPoint3*>(
        &_NamedPoint3_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(NamedPoint3& a, NamedPoint3& b) { a.Swap(&b); }
  inline void Swap(NamedPoint3* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NamedPoint3* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NamedPoint3* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NamedPoint3>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NamedPoint3& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NamedPoint3& from) { NamedPoint3::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NamedPoint3* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "gl.NamedPoint3"; }

 protected:
  explicit NamedPoint3(::google::protobuf::Arena* arena);
  NamedPoint3(::google::protobuf::Arena* arena, const NamedPoint3& from);
  NamedPoint3(::google::protobuf::Arena* arena, NamedPoint3&& from) noexcept
      : NamedPoint3(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 3,
    kPointFieldNumber = 1,
    kSizeFieldNumber = 2,
  };
  // optional string name = 3;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .gl.Point3 point = 1;
  bool has_point() const;
  void clear_point() ;
  const ::gl::Point3& point() const;
  PROTOBUF_NODISCARD ::gl::Point3* release_point();
  ::gl::Point3* mutable_point();
  void set_allocated_point(::gl::Point3* value);
  void unsafe_arena_set_allocated_point(::gl::Point3* value);
  ::gl::Point3* unsafe_arena_release_point();

  private:
  const ::gl::Point3& _internal_point() const;
  ::gl::Point3* _internal_mutable_point();

  public:
  // float size = 2;
  void clear_size() ;
  float size() const;
  void set_size(float value);

  private:
  float _internal_size() const;
  void _internal_set_size(float value);

  public:
  // @@protoc_insertion_point(class_scope:gl.NamedPoint3)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      27, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NamedPoint3& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::gl::Point3* point_;
    float size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fgl_5fserver_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Point3

// float x = 1;
inline void Point3::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline float Point3::x() const {
  // @@protoc_insertion_point(field_get:gl.Point3.x)
  return _internal_x();
}
inline void Point3::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:gl.Point3.x)
}
inline float Point3::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Point3::_internal_set_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// float y = 2;
inline void Point3::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline float Point3::y() const {
  // @@protoc_insertion_point(field_get:gl.Point3.y)
  return _internal_y();
}
inline void Point3::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:gl.Point3.y)
}
inline float Point3::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Point3::_internal_set_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// float z = 3;
inline void Point3::clear_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = 0;
}
inline float Point3::z() const {
  // @@protoc_insertion_point(field_get:gl.Point3.z)
  return _internal_z();
}
inline void Point3::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:gl.Point3.z)
}
inline float Point3::_internal_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.z_;
}
inline void Point3::_internal_set_z(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = value;
}

// optional float r = 4;
inline bool Point3::has_r() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Point3::clear_r() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float Point3::r() const {
  // @@protoc_insertion_point(field_get:gl.Point3.r)
  return _internal_r();
}
inline void Point3::set_r(float value) {
  _internal_set_r(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:gl.Point3.r)
}
inline float Point3::_internal_r() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.r_;
}
inline void Point3::_internal_set_r(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_ = value;
}

// optional float g = 5;
inline bool Point3::has_g() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Point3::clear_g() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.g_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float Point3::g() const {
  // @@protoc_insertion_point(field_get:gl.Point3.g)
  return _internal_g();
}
inline void Point3::set_g(float value) {
  _internal_set_g(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:gl.Point3.g)
}
inline float Point3::_internal_g() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.g_;
}
inline void Point3::_internal_set_g(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.g_ = value;
}

// optional float b = 6;
inline bool Point3::has_b() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Point3::clear_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float Point3::b() const {
  // @@protoc_insertion_point(field_get:gl.Point3.b)
  return _internal_b();
}
inline void Point3::set_b(float value) {
  _internal_set_b(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:gl.Point3.b)
}
inline float Point3::_internal_b() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.b_;
}
inline void Point3::_internal_set_b(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_ = value;
}

// -------------------------------------------------------------------

// NamedPoint3

// .gl.Point3 point = 1;
inline bool NamedPoint3::has_point() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.point_ != nullptr);
  return value;
}
inline void NamedPoint3::clear_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.point_ != nullptr) _impl_.point_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::gl::Point3& NamedPoint3::_internal_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::gl::Point3* p = _impl_.point_;
  return p != nullptr ? *p : reinterpret_cast<const ::gl::Point3&>(::gl::_Point3_default_instance_);
}
inline const ::gl::Point3& NamedPoint3::point() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gl.NamedPoint3.point)
  return _internal_point();
}
inline void NamedPoint3::unsafe_arena_set_allocated_point(::gl::Point3* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.point_);
  }
  _impl_.point_ = reinterpret_cast<::gl::Point3*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gl.NamedPoint3.point)
}
inline ::gl::Point3* NamedPoint3::release_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::gl::Point3* released = _impl_.point_;
  _impl_.point_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::gl::Point3* NamedPoint3::unsafe_arena_release_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gl.NamedPoint3.point)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::gl::Point3* temp = _impl_.point_;
  _impl_.point_ = nullptr;
  return temp;
}
inline ::gl::Point3* NamedPoint3::_internal_mutable_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.point_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::gl::Point3>(GetArena());
    _impl_.point_ = reinterpret_cast<::gl::Point3*>(p);
  }
  return _impl_.point_;
}
inline ::gl::Point3* NamedPoint3::mutable_point() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::gl::Point3* _msg = _internal_mutable_point();
  // @@protoc_insertion_point(field_mutable:gl.NamedPoint3.point)
  return _msg;
}
inline void NamedPoint3::set_allocated_point(::gl::Point3* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.point_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.point_ = reinterpret_cast<::gl::Point3*>(value);
  // @@protoc_insertion_point(field_set_allocated:gl.NamedPoint3.point)
}

// float size = 2;
inline void NamedPoint3::clear_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.size_ = 0;
}
inline float NamedPoint3::size() const {
  // @@protoc_insertion_point(field_get:gl.NamedPoint3.size)
  return _internal_size();
}
inline void NamedPoint3::set_size(float value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:gl.NamedPoint3.size)
}
inline float NamedPoint3::_internal_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.size_;
}
inline void NamedPoint3::_internal_set_size(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.size_ = value;
}

// optional string name = 3;
inline bool NamedPoint3::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NamedPoint3::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& NamedPoint3::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gl.NamedPoint3.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NamedPoint3::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gl.NamedPoint3.name)
}
inline std::string* NamedPoint3::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:gl.NamedPoint3.name)
  return _s;
}
inline const std::string& NamedPoint3::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void NamedPoint3::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* NamedPoint3::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* NamedPoint3::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gl.NamedPoint3.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void NamedPoint3::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:gl.NamedPoint3.name)
}

// -------------------------------------------------------------------

// PointCloud3

// repeated .gl.Point3 points = 1;
inline int PointCloud3::_internal_points_size() const {
  return _internal_points().size();
}
inline int PointCloud3::points_size() const {
  return _internal_points_size();
}
inline void PointCloud3::clear_points() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.points_.Clear();
}
inline ::gl::Point3* PointCloud3::mutable_points(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:gl.PointCloud3.points)
  return _internal_mutable_points()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::gl::Point3>* PointCloud3::mutable_points()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:gl.PointCloud3.points)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_points();
}
inline const ::gl::Point3& PointCloud3::points(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gl.PointCloud3.points)
  return _internal_points().Get(index);
}
inline ::gl::Point3* PointCloud3::add_points() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::gl::Point3* _add = _internal_mutable_points()->Add();
  // @@protoc_insertion_point(field_add:gl.PointCloud3.points)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::gl::Point3>& PointCloud3::points() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:gl.PointCloud3.points)
  return _internal_points();
}
inline const ::google::protobuf::RepeatedPtrField<::gl::Point3>&
PointCloud3::_internal_points() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.points_;
}
inline ::google::protobuf::RepeatedPtrField<::gl::Point3>*
PointCloud3::_internal_mutable_points() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.points_;
}

// optional string entity_name = 2;
inline bool PointCloud3::has_entity_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PointCloud3::clear_entity_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PointCloud3::entity_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:gl.PointCloud3.entity_name)
  return _internal_entity_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PointCloud3::set_entity_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:gl.PointCloud3.entity_name)
}
inline std::string* PointCloud3::mutable_entity_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_entity_name();
  // @@protoc_insertion_point(field_mutable:gl.PointCloud3.entity_name)
  return _s;
}
inline const std::string& PointCloud3::_internal_entity_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_name_.Get();
}
inline void PointCloud3::_internal_set_entity_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_name_.Set(value, GetArena());
}
inline std::string* PointCloud3::_internal_mutable_entity_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.entity_name_.Mutable( GetArena());
}
inline std::string* PointCloud3::release_entity_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:gl.PointCloud3.entity_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.entity_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.entity_name_.Set("", GetArena());
  }
  return released;
}
inline void PointCloud3::set_allocated_entity_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.entity_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_name_.IsDefault()) {
    _impl_.entity_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:gl.PointCloud3.entity_name)
}

// optional float point_size = 3;
inline bool PointCloud3::has_point_size() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PointCloud3::clear_point_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.point_size_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float PointCloud3::point_size() const {
  // @@protoc_insertion_point(field_get:gl.PointCloud3.point_size)
  return _internal_point_size();
}
inline void PointCloud3::set_point_size(float value) {
  _internal_set_point_size(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:gl.PointCloud3.point_size)
}
inline float PointCloud3::_internal_point_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.point_size_;
}
inline void PointCloud3::_internal_set_point_size(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.point_size_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace gl


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // proto_2fgl_5fserver_2eproto_2epb_2eh
